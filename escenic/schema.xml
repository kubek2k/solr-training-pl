<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
  This is the Solr schema file. This file should be named "schema.xml" and
  should be in the conf directory under the solr home
  (i.e. ./solr/conf/schema.xml by default)
  or located where the classloader for the Solr webapp can find it.

  This example schema is the recommended starting point for users.
  It should be kept correct and concise, usable out-of-the-box.

  For more information, on how to customize this file, please see
  http://wiki.apache.org/solr/SchemaXml
-->

<schema name="Escenic" version="1.1">
  <types>
    <!-- field type definitions. The "name" attribute is
      just a label to be used by field definitions.  The "class"
      attribute and any other attributes determine the real
      behavior of the fieldType.
      Class names starting with "solr" refer to java classes in the
      org.apache.solr.analysis package.
    -->

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"
               omitNorms="true"/>

    <fieldType name="integer" class="solr.SortableIntField"
               sortMissingLast="true" omitNorms="true"/>
    <fieldType name="long" class="solr.SortableLongField" sortMissingLast="true"
               omitNorms="true"/>
    <fieldType name="float" class="solr.SortableFloatField"
               sortMissingLast="true" omitNorms="true"/>
    <fieldType name="double" class="solr.SortableDoubleField"
               sortMissingLast="true" omitNorms="true"/>


    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
      is a more restricted form of the canonical representation of dateTime
      http://www.w3.org/TR/xmlschema-2/#dateTime
      The trailing "Z" designates UTC time and is mandatory.
      Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
      All other components are mandatory.

      Expressions can also be used to denote calculations that should be
      performed relative to "NOW" to determine the value, ie...

      NOW/HOUR
      ... Round to the start of the current hour
      NOW-1DAY
      ... Exactly 1 day prior to now
      NOW/DAY+6MONTHS+3DAYS
      ... 6 months and 3 days in the future from the start of
      the current day

      Consult the DateField javadocs for more information.
    -->
    <fieldType name="date" class="solr.DateField" sortMissingLast="true"
               omitNorms="true"/>

    <!--
      A Trie based date field for faster date range queries and date faceting.
    -->
    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

    <!-- A string type text field that is stored verbatim without any analyzing. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true"
               omitNorms="true"/>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
      words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
      so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
      Synonyms and stopwords are customized by external files, and stemming is enabled.
      Duplicate tokens at the same position (which may result from Stemmed Synonyms or
      WordDelim parts) are removed.
    -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
          <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.StopFilterFactory" ignoreCase="true"
                words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1"
                generateNumberParts="1" catenateWords="1"
                catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" protected="protwords.txt" language="English"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
                ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true"
                words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1"
                generateNumberParts="1" catenateWords="0"
                catenateNumbers="0" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" protected="protwords.txt" language="English"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- This is an example of using the KeywordTokenizer along
      With various TokenFilterFactories to produce a sortable field
      that does not include some properties of the source text
    -->
    <fieldType name="alphaOnlySort" class="solr.TextField"
               sortMissingLast="true" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
          input string is preserved as a single token
        -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <!-- The LowerCase TokenFilter does what you expect, which can be
          when you want your sorting to be case insensitive
        -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <!-- The TrimFilter removes any leading or trailing whitespace -->
        <filter class="solr.TrimFilterFactory"/>
        <!-- The PatternReplaceFilter gives you the flexibility to use
          Java Regular expression to replace any sequence of characters
          matching a pattern with an arbitrary replacement string,
          which may include back refrences to portions of the orriginal
          string matched by the pattern.

          See the Java Regular Expression documentation for more
          infomation on pattern and replacement string syntax.

          http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
        -->
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])"
                replacement="" replace="all"/>
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed, any data added to
      them will be ignored outright
    -->
    <fieldtype name="ignored" stored="false" indexed="false"
               class="solr.StrField"/>

  </types>


  <fields>
    <!-- Valid attributes for fields:
      name: mandatory - the name for the field
      type: mandatory - the name of a previously defined type from the <types> section
      indexed: true if this field should be indexed (searchable or sortable)
      stored: true if this field should be retrievable
      compressed: [false] if this field should be stored using gzip compression
      (this will only apply if the field type is compressable; among
      the standard field types, only TextField and StrField are)
      multiValued: true if this field may contain multiple values per document
      omitNorms: (expert) set to true to omit the norms associated with
      this field (this disables length normalization and index-time
      boosting for the field, and saves some memory).  Only full-text
      fields or fields that need an index-time boost need norms.
    -->

    <field name="id" type="string" indexed="true" stored="true"
           required="true"/>

    <field name="objectid" type="string" indexed="false" stored="true"
           required="true"/>

    <field name="author" type="string" indexed="false" stored="true"
           multiValued="true" />
    <field name="creator" type="string" indexed="false" stored="true"
           multiValued="false"/>
    <field name="creator_username" type="string" indexed="true" stored="true"
           multiValued="false"/>
    <field name="last_edited_by" type="string" indexed="true" stored="true"
           multiValued="false" omitNorms="true"/>
    <field name="tag" type="string" indexed="true" stored="true"
           multiValued="true" omitNorms="true"/>

    <field name="home_section" type="integer" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="home_section_name" type="string" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="section" type="integer" indexed="true" stored="false"
           multiValued="true" omitNorms="true"/>

    <field name="state" type="string" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="contenttype" type="string" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="edit_uri" type="string" indexed="false" stored="true"/>
    <field name="publication" type="string" indexed="true" stored="true"/>

    <field name="sourceid" type="string" indexed="true" stored="false"
           omitNorms="true"/>
    <field name="source" type="text" indexed="true" stored="false"
           omitNorms="true"/>
    <field name="thumbnail_id" type="integer" indexed="true" stored="true"
           multiValued="true" omitNorms="true"/>

    <!-- Some commonly used date fields -->
    <field name="creationdate" type="date" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="publishdate" type="date" indexed="true" stored="true"
           omitNorms="true"/>
    <field name="activatedate" type="date" indexed="true" stored="false"
           omitNorms="true"/>
    <field name="expiredate" type="date" indexed="true" stored="false"
           omitNorms="true"/>
    <field name="lastmodifieddate" type="date" indexed="true" stored="true"
           omitNorms="true"/>

    <!-- Probably the following is the most heavily searched field. -->
    <field name="title" type="text" indexed="true" stored="true"
           omitNorms="true" required="true"/>

    <field name="description" type="text" indexed="false" stored="false"/>

    <field name="text" type="text" indexed="true" stored="false" multiValued="true"
           omitNorms="true"/>

    <field name="summary" type="text" indexed="false" stored="true"/>

    <field name="acl" type="string" indexed="true" stored="false"/>

    <!-- Fields indexed by the forum plug-in and needed for the
         search in the forum moderator web application.-->
    <field name="forumid_double" type="double" indexed="true" stored="true"/>
    <field name="postingstate_text" type="text" indexed="true" stored="true"/>
    <field name="flagged_b" type="boolean" indexed="true" stored="true"/>
    <field name="acceptcomments_b" type="boolean" indexed="true" stored="false"/>
    <field name="moderated_b" type="boolean" indexed="true" stored="false"/>
    <field name="forum_text" type="text" indexed="false" stored="true"/>
    <field name="senderemail_text" type="text" indexed="false" stored="true"/>
    <field name="status_enum" type="string" indexed="true" stored="true"/>

    <!-- Fields required to be indexed by Dashboard plugin -->
    <field name="moderation-state_text" type="string" indexed="true" stored="true"/>

    <!-- Fields needed by Classification -->
    <field name="classification" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true" />

    <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
      will be used if the name matches any of the patterns.
      RESTRICTION: the glob-like pattern in the name attribute must have
      a "*" only at the start or the end.
      EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
      Longer patterns will be matched first.  if equal size patterns
      both match, the first appearing in the schema will be used.  
      
      ESCENIC NOTE: None of these dynamic fields are used by the search in
      Content Studio and are not indexed by default. If some of these
      are needed by the frontend search, please use indexed="true" for them.
      
      However, *_text fields are copied over to the "text" field which is the 
      default search field. 
    -->
    <dynamicField name="*_i" type="integer" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_s" type="string" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_l" type="long" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_b" type="boolean" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_f" type="float" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_double" type="double" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_date" type="date" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_text" type="string" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_facet" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_path" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_enum" type="string" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_tdate" type="tdate" indexed="false" stored="false" multiValued="true"/>

    <!-- These fields are required to index the link field attributes. 
      *_relation_link and *_mime-type_link have to be stored as we need these 
      values to generate the atom feed from SOLR.
    -->
    <dynamicField name="*_relation_link" type="string" indexed="false" stored="true" multiValued="true"/>
    <dynamicField name="*_mime-type_link" type="string" indexed="false" stored="true" multiValued="true"/>
    <dynamicField name="*_title_link" type="string" indexed="false" stored="false" multiValued="true"/>
    <dynamicField name="*_href_link" type="string" indexed="false" stored="false" multiValued="true"/>


    <!-- uncomment the following to ignore any fields that don't already match an existing
      field name or dynamic field, rather than reporting them as an error.
      alternately, change the type="ignored" to some other type e.g. "text" if you want
      unknown fields indexed and/or stored by default -->
    <!--dynamicField name="*" type="ignored" /-->

  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
    Unless this field is marked with required="false", it will be a required field
  -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <defaultSearchField>text</defaultSearchField>

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND"/>

  <!-- copyField commands copy one field to another at the time a document
    is added to the index.  It's used either to index the same field differently,
    or to add multiple fields to the same field for easier/faster searching.  -->


  <copyField source="objectid" dest="text"/>
  <copyField source="title" dest="text"/>
  <copyField source="*_text" dest="text"/>
  <copyField source="*_title_link" dest="text"/> <!-- We use the title of the link field for default search -->
  <copyField source="author" dest="text"/>
  <copyField source="creator" dest="text"/>
  <copyField source="tag" dest="text"/>
  <copyField source="summary" dest="text"/>
  <copyField source="description" dest="text"/>
  <copyField source="source" dest="text"/>
  <copyField source="sourceid" dest="text"/>
  <copyField source="*_facet" dest="classification" />
  <copyField source="*_date" dest="text"/>

  <!--
  <copyField source="manu" dest="content"/>
    <copyField source="id" dest="sku" />
    <copyField source="manu" dest="manu_exact" />
  -->
  <!-- Similarity is the scoring routine for each document vs. a query.
    A custom similarity may be specified here, but the default is fine
    for most applications.  -->
  <!-- <similarity class="org.apache.lucene.search.DefaultSimilarity"/> -->
</schema>
